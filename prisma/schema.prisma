// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  @@map("auth.User") 
  id                      Int       @id @default(autoincrement())
  email                   String    @unique
  username                String
  password                String
  isEmailVerified         Boolean   @default(false)
  role                    Role      @default(USER)
  loginType               LoginType    @default(ID_PASSWORD)
  resetPasswordToken      String?
  resetPasswordExpiry     DateTime?
  emailVerificationToken  String?
  emailVerificationExpiry DateTime?
  failedLoginAttempts     Int       @default(0)
  accountLockedUntil      DateTime?
  status                  Status    @default(ACTIVE)
  twoFactorAuthEnabled    Boolean   @default(false)
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  sessions                UserSession[]

  @@index([email])
  @@index([username])
}

model UserSession {
  id            String   @id @default(cuid())
  userId        Int      // Changed from String to Int to match User.id
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  deviceInfo    String   // Browser, OS, etc.
  ipAddress     String
  lastActive    DateTime @default(now())
  isValid       Boolean  @default(true)
  refreshToken  String?  // Store session-specific refresh token
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([userId])
}


model BlockedIP {
  ip           String   @id
  blockedUntil DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model FailedAttempt {
  id        Int      @id @default(autoincrement())
  ip        String
  createdAt DateTime @default(now())
  updatedAt    DateTime @updatedAt
  @@index([ip, createdAt])
}



enum Role {
  USER
  ADMIN
}

enum Status {
  ACTIVE
  BANNED
  LOCKED
  INACTIVE
  SUSPENDED
}

enum LoginType {
  ID_PASSWORD
  GOOGLE
}


